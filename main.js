/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

import{Plugin as f,TFile as v}from"obsidian";var u=class{constructor(a,t,s,e){this.container=a,this.data=t,this.options=s,this.onUpdate=e,this.currentYear=new Date().getFullYear(),this.currentMonth=new Date().getMonth()}render(){switch(this.container.empty(),this.container.createEl("h3",{text:this.options.title,cls:"goal-tracker-title"}),this.renderCalendarControls(),this.options.type){case"monthly":this.renderMonthlyView();break;case"weekly":this.renderWeeklyView();break;case"daily":default:this.renderDailyView()}}renderMonthlyView(){let a=this.container.createEl("div",{cls:"goal-tracker-calendar monthly"});for(let t=0;t<12;t++){let s=(t+1).toString().padStart(2,"0"),e=`${this.currentYear}-${s}`,n=this.data.goals[e]??!1,l=a.createEl("div",{cls:`calendar-cell ${n?"completed":""}`,text:new Date(2024,t).toLocaleString("default",{month:"short"})});l.addEventListener("click",async()=>{this.data.goals[e]=!n,await this.onUpdate(this.data),l.toggleClass("completed",!n)})}}renderWeeklyView(){let a=this.container.createEl("div",{cls:"goal-tracker-calendar weekly"}),t=new Date(this.currentYear,this.currentMonth,1),s=new Date(this.currentYear,this.currentMonth+1,0),e=new Date(t),n=e.getDay();for(e.setDate(e.getDate()-(n===0?6:n-1));e<=s;){let l=new Date(e);l.setDate(l.getDate()+6);let o=this.getWeekNumber(e),i=this.getWeekYear(e),r=new Date(e);if(r.setDate(r.getDate()+3),r.getMonth()===this.currentMonth&&r.getFullYear()===this.currentYear){let c=a.createEl("div",{cls:"week-row"}),h=`${i}-W${o}`,p=this.data.goals[h]??!1,w=`${e.getDate()} ${e.toLocaleString("default",{month:"short"})} - ${l.getDate()} ${l.toLocaleString("default",{month:"short"})}`,y=c.createEl("div",{cls:"week-info"});y.createEl("span",{text:`Week ${o}`,cls:"week-number"}),y.createEl("span",{text:w,cls:"week-dates"});let m=c.createEl("div",{cls:`calendar-cell ${p?"completed":""}`});m.addEventListener("click",async()=>{this.data.goals[h]=!p,await this.onUpdate(this.data),m.toggleClass("completed",!p)})}e.setDate(e.getDate()+7)}}renderDailyView(){let a=this.container.createEl("div",{cls:"goal-tracker-calendar"}),t=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],s=a.createEl("div",{cls:"calendar-row"});t.forEach(r=>{s.createEl("div",{cls:"calendar-cell header",text:r})});let e=new Date(this.currentYear,this.currentMonth,1),l=new Date(this.currentYear,this.currentMonth+1,0).getDate(),o=e.getDay(),i=a.createEl("div",{cls:"calendar-row"});for(let r=0;r<o;r++)i.createEl("div",{cls:"calendar-cell empty"});for(let r=1;r<=l;r++){(r+o-1)%7===0&&r!==1&&(i=a.createEl("div",{cls:"calendar-row"}));let d=`${this.currentYear}-${(this.currentMonth+1).toString().padStart(2,"0")}-${r.toString().padStart(2,"0")}`,c=this.data.goals[d]??!1,h=i.createEl("div",{cls:`calendar-cell ${c?"completed":""}`,text:r.toString()});h.addEventListener("click",async()=>{this.data.goals[d]=!c,await this.onUpdate(this.data),h.toggleClass("completed",!c)})}}getWeekYear(a){let t=new Date(a);return t.setDate(t.getDate()+3-(t.getDay()+6)%7),t.getFullYear()}getWeekNumber(a){let t=new Date(a.valueOf()),s=(a.getDay()+6)%7;t.setDate(t.getDate()-s+3);let e=t.valueOf();return t.setMonth(0,1),t.getDay()!==4&&t.setMonth(0,1+(4-t.getDay()+7)%7),1+Math.ceil((e-t.valueOf())/6048e5)}renderCalendarControls(){let a=this.container.createEl("div",{cls:"goal-tracker-controls"}),t=a.createEl("button",{text:"←"}),s=a.createEl("span",{text:this.currentYear.toString(),cls:"year-display"}),e=a.createEl("button",{text:"→"});if(this.options.type==="monthly"){t.addEventListener("click",()=>{this.currentYear--,s.textContent=this.currentYear.toString(),this.render()}),e.addEventListener("click",()=>{this.currentYear++,s.textContent=this.currentYear.toString(),this.render()});return}let n=a.createEl("select");["January","February","March","April","May","June","July","August","September","October","November","December"].forEach((o,i)=>{let r=n.createEl("option",{text:o,value:i.toString()});i===this.currentMonth&&(r.selected=!0)}),n.addEventListener("change",o=>{this.currentMonth=parseInt(o.target.value),this.render()}),t.addEventListener("click",()=>{this.currentMonth===0?(this.currentMonth=11,this.currentYear--):this.currentMonth--,n.value=this.currentMonth.toString(),s.textContent=this.currentYear.toString(),this.render()}),e.addEventListener("click",()=>{this.currentMonth===11?(this.currentMonth=0,this.currentYear++):this.currentMonth++,n.value=this.currentMonth.toString(),s.textContent=this.currentYear.toString(),this.render()})}};var g=class extends f{async onload(){this.registerMarkdownCodeBlockProcessor("goal-calendar",async(a,t,s)=>{let e,n={type:"daily",title:"Goal Tracker"};try{let o=a.trim().split(`
`);for(;o.length>0&&o[0].includes(":");){let[r,d]=o[0].split(":"),c=r.trim(),h=d.trim();c==="type"?n.type=h:c==="title"&&(n.title=h),o.shift()}let i=o.join(`
`);i.trim()?e=JSON.parse(i):e={id:crypto.randomUUID(),type:n.type,title:n.title,goals:{}},e.title=n.title}catch(o){console.error("Failed to parse calendar data",o),e={id:crypto.randomUUID(),type:n.type,title:n.title,goals:{}}}new u(t,e,n,async o=>{let i=this.app.vault.getAbstractFileByPath(s.sourcePath);if(!(i instanceof v)){console.error("Could not find source file");return}let r=await this.app.vault.read(i),d=s.getSectionInfo(t);if(!d){console.error("Could not find section info");return}let c=this.updateCalendarBlock(r,d,`type: ${n.type}
title: ${n.title}
${JSON.stringify(o,null,2)}`);await this.app.vault.modify(i,c)}).render()})}updateCalendarBlock(a,t,s){let e=a.split(`
`),n=t.lineStart,l=t.lineEnd,o=e.slice(0,n+1).join(`
`),i=e.slice(l).join(`
`);return`${o}
${s}
${i}`}};export{g as default};
